version: 2

models:
  - name: stg_sales
    description: The stg_sales model transforms raw sales data from the source 'src_sales', including order and customer details.
    columns:
      - name: order_id
        description: Unique identifier for each order. This is derived from the 'ordernumber' column in the source data.
        data_type: int64
        tests:
          - not_null

      - name: unit_price_corrected
        description: This column represents the corrected unit price of the product. It is calculated by dividing the total sales by the quantity ordered, rounded to two decimal places. This field is used to correct any discrepancies in the unit price.
        data_type: float64

      - name: unit_price
        description: Original unit price from the source data. This column is unreliable as it is truncated at 100.00, causing discrepancies in total sales calculations.
        data_type: float64

      - name: order_date
        description: The date when the order was placed. In the original dataset, this field was stored as a timestamp, but it has been converted to date format in the staging layer to simplify date-based analysis and improve compatibility with the date dimension.
        data_type: date

      - name: order_status
        description: The status of the order. This is a string field.
        data_type: string
        tests:
          - accepted_values:
              values:
                - Shipped
                - In Process
                - Cancelled
                - Resolved
                - Disputed
                - On Hold

      - name: msrp
        description: The Manufacturer's Suggested Retail Price (MSRP) of the product sold in the order.
        data_type: int64

      - name: customer_id
        description: A unique identifier for each customer. This is generated by hashing the customer's name and phone number.
        data_type: string
        tests:
          - not_null
          - relationships:
              to: ref('dim_customer')
              field: customer_id

      - name: order_line_id
        description: A unique identifier for each order line, generated by hashing the combination of order line number and order number. If either of these values is null, a placeholder value '_dbt_utils_surrogate_key_null_' is used instead.
        data_type: string
        tests:
          - not_null
          - unique

  - name: fct_sales
    description: The fct_sales model is a fact table that contains sales data.  The data is sourced from the stg_sales table in the sales_staging schema of the dbt-sales-project database.
    columns:
      - name: order_line_id
        description: A unique identifier for each order line, generated by hashing the combination of order line number and order number.
        data_type: string
        tests:
          - not_null
          - unique

      - name: order_id
        description: Unique identifier for each order placed in the system
        data_type: int64
        tests:
          - not_null

      - name: product_id
        description: Unique identifier for each product sold in the system
        data_type: string
        tests:
          - not_null

      - name: unit_price_corrected
        description: The corrected unit price of the product sold. This field is derived after applying necessary corrections to the raw unit price data.
        data_type: float64

      - name: order_date
        description: The date when the order was placed. It is in the format YYYY-MM-DD to be able to link it with the dim_date table
        data_type: date

      - name: customer_id
        description: The unique identifier for each customer. This is a foreign key that links to the customer dimension table.
        data_type: string
        tests:
          - relationships:
              field: customer_id
              to: ref('dim_customer')

      - name: order_status
        description: The current status of the order. Possible values include 'Pending', 'Shipped', 'Cancelled', etc.
        data_type: string
        tests:
          - accepted_values:
              values:
                - Shipped
                - Cancelled
                - Resolved
                - In Process
                - On Hold
                - Disputed

  - name: fct_orders
    description: The fct_orders model is a fact table that aggregates sales data at the order level.  The data is sourced from the stg_sales staging table in the dbt-sales-project database.
    columns:
      - name: order_id
        description: The unique identifier for each order.
        data_type: int64
        tests:
          - not_null
          - unique

      - name: distinct_items_count
        description: This column represents the count of distinct items in an order. It is calculated by counting the unique product IDs in each order.
        data_type: int64

      - name: customer_id
        description: This column represents the unique identifier for each customer.
        data_type: string
        tests:
          - relationships:
              field: customer_id
              to: ref('dim_customer')

      - name: order_status
        description: The status of the order.
        data_type: string
        tests:
          - accepted_values:
              values:
                - Cancelled
                - Disputed
                - In Process
                - On Hold
                - Resolved
                - Shipped

  - name: dim_product
    description: The dim_product model is a dimension table that contains information about the products. It includes the product_id, unit_price_corrected, product_category, and msrp columns. The data for this model is sourced from the stg_sales table in the sales_staging schema of the dbt-sales-project database.
    columns:
      - name: product_id
        description: The unique identifier for each product in the sales database.
        data_type: string
        tests:
          - not_null
          - unique

      - name: unit_price_corrected
        description: This column represents the corrected unit price of the product. The values in this column are derived from the 'stg_sales' table. The value is calculated based on total sales and quatity orderded, to fix issues with the original unit price in the source table.
        data_type: float64
        tests:
          - not_null

      - name: product_category
        description: The category to which the product belongs. This is a string value.
        data_type: string

      - name: msrp
        description: The Manufacturer's Suggested Retail Price (MSRP) of the product. This is the price at which the manufacturer recommends that the retailer sell the product. The intention was to help standardize prices among locations.
        data_type: int64
  - name: dim_date
    description: The 'dim_date' model is a date dimension table that provides a comprehensive set of date-related attributes for each day from 1990-01-01 to 2050-12-31.
    columns:
      - name: date_day
        description: This column represents the specific date for each record in the format YYYY-MM-DD. It is the primary key for the 'dim_date' model and is used to join with other models that have a date dimension.
        data_type: date

  - name: dim_customer
    description: The dim_customer model is a dimension table that contains detailed information about customers. The data for this model is sourced from the stg_sales staging table in the dbt-sales-project database.
    columns:
      - name: customer_id
        description: The unique identifier for each customer in the database.
        data_type: string
        tests:
          - not_null
          - unique

  - name: mart_clv
    description: The 'mart_clv' model is a customer-level dataset that provides insights into customer lifetime value (CLV). It includes metrics such as total revenue generated by a customer, total orders placed by a customer, average order value, purchase frequency, and two types of CLV calculations - frequency-based and time-based. The frequency-based CLV is calculated as the product of total revenue and the ratio of total orders to the number of unique months. The time-based CLV is calculated as the product of total revenue and the ratio of customer lifetime days to the number of unique months. The model is built using the 'fct_sales' table from the 'sales_fact' schema of the 'dbt-sales-project' database.
    columns:
      - name: total_revenue
        description: This column represents the total revenue generated by a customer. It is calculated by summing up the total sales for each unique customer_id in the sales_fact.fct_sales table.

      - name: purchase_frequency
        description: This column represents the average number of purchases a customer makes in a month. It is calculated by dividing the total number of orders by the number of unique months in which the customer has made purchases.

      - name: frequency_based_clv
        description: This column represents the Customer Lifetime Value (CLV) calculated based on the frequency of purchases. It is computed by multiplying the total revenue by the ratio of total orders to the number of unique months. The value is rounded to two decimal places.

      - name: time_based_clv
        description: The time-based customer lifetime value (CLV) is calculated by multiplying the total revenue by the ratio of the customer's lifetime in days to the number of unique months in which they made purchases. This value represents the total revenue a customer is expected to generate over their lifetime, taking into account the length of their relationship with the business.

  - name: mart_monthly_sales_by_region
    description: The 'mart_monthly_sales_by_region' model provides a detailed view of sales data aggregated on a monthly basis by region. It includes columns for the date, customer location (country and city), total orders, total quantity ordered, total sales, average order value, and the number of distinct customers. The data is sourced from the 'dim_customer', 'fct_sales', and 'dim_date' tables in the 'dbt-sales-project' database. The model is designed to support analysis of sales performance and customer behavior trends over time and across different regions.
    columns:
      - name: average_order_value
        description: This column represents the average value of an order. It is calculated by dividing the total sales by the total quantity ordered. The value is rounded to two decimal places for precision.

      - name: distinct_customers
        description: This column represents the count of unique customers who have made purchases. It is calculated by counting the distinct customer IDs in the sales data for each day.

